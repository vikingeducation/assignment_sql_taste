tutorial.us_housing_units

Tip: You can use CMD + / to comment out multiple lines at a time in the SQL editor just like in your text editor

10 results with information on all columns

SELECT *
  FROM tutorial.us_housing_units
  LIMIT 10

Housing starts in the Midwest

SELECT *
  FROM tutorial.us_housing_units
  ORDER BY midwest


All housing starts in December since 1985

SELECT *
  FROM tutorial.us_housing_units
  WHERE year >= 1985 AND month_name = 'December'

All housing starts in the second half of the year since 1990

SELECT *
  FROM tutorial.us_housing_units
  WHERE year >= 1990 AND month >= 6

All rows where housing starts were above 30,000 in the South region

SELECT *
  FROM tutorial.us_housing_units
  WHERE south >= 30


The sum of housing starts across all regions for each row

SELECT *,
  south + west + midwest + northeast AS sum
FROM tutorial.us_housing_units

All rows where the sum of all housing starts is above 70,000 Note: You can't use an alias in a WHERE clause.

SELECT *

FROM tutorial.us_housing_units
WHERE south + west + midwest + northeast > 70
FROM tutorial.us_housing_units

All rows where the sum of all housing starts is between 50-80k

SELECT *

FROM tutorial.us_housing_units
WHERE south + west + midwest + northeast BETWEEN 50 AND 80
FROM tutorial.us_housing_units


The average of all housing starts across all regions for each row
SELECT *,
       (west + midwest + northeast + south) / 4 AS average
FROM tutorial.us_housing_units


All rows where the housing starts in the South are above the sum of the other three regions
SELECT *
FROM tutorial.us_housing_units
WHERE (west + midwest + northeast) < south


The percentage of housing starts that occur in each region since 1990 Note: Use an alias to title the new columns appropriately
SELECT *,
      south / (south + west + midwest + northeast) * 100 AS south_percent,
      west / (south + west + midwest + northeast) * 100 AS west_percent,
      midwest / (south + west + midwest + northeast) * 100 AS midwest_percent,
      northeast / (south + west + midwest + northeast) * 100 AS northeast_percent
FROM tutorial.us_housing_units
WHERE year >= 1990


tutorial.billboard_top_100_year_end

Note: Use single quotes ' instead of double quotes " for LIKE and similar queries since the Mode tool is very particular about its syntax. Double quotes are used to specify column names, so you might get a "column XYZ does not exist" error if you mess this up.

All rows where Elvis Presley had a song on the top 100 charts
SELECT *
FROM tutorial.billboard_top_100_year_end
WHERE "group" ILIKE '%elvis%'


All rows where the artist's name contained "Tony" (not case sensitive)
SELECT *
FROM tutorial.billboard_top_100_year_end
WHERE "group" ILIKE '%tony%'


All rows where the song title contained the word "love" in any way
SELECT *
FROM tutorial.billboard_top_100_year_end
WHERE song_name ILIKE '%love%'


All rows where the artist's name begins with the letter "A"
SELECT *
FROM tutorial.billboard_top_100_year_end
WHERE artist ILIKE 'a%'

The top 3 songs from each year between 1960-1969
SELECT *
FROM tutorial.billboard_top_100_year_end
WHERE (year BETWEEN 1960 AND 1969)
AND year_rank <= 3


All rows where either Elvis Presley, The Rolling Stones, or Van Halen were the artist
SELECT *
FROM tutorial.billboard_top_100_year_end
WHERE "group" ILIKE '%elvis%'
OR "group" ILIKE '%van halen%'
OR "group" ILIKE '%the rolling stones%'

Which artist has had the most appearances on the top 100 list?
SELECT artist,
      COUNT(artist) AS artist_hits
FROM tutorial.billboard_top_100_year_end
GROUP BY artist
ORDER BY artist_hits DESC
LIMIT 1

Which artist has had the most #1 hits? How many?
SELECT artist,
      COUNT(artist) AS artist_hits
FROM tutorial.billboard_top_100_year_end
WHERE year_rank = 1
GROUP BY artist
ORDER BY artist_hits DESC
LIMIT 1

All rows from 1970 where the songs were ranked 10-20th
SELECT *
FROM tutorial.billboard_top_100_year_end
WHERE year >= 1970 AND year_rank BETWEEN 10 AND 20

All rows from the 1990's where Madonna was not ranked 10-100th
SELECT *
FROM tutorial.billboard_top_100_year_end
WHERE year BETWEEN 1990 AND 1999
AND artist = 'Madonna'
AND year_rank < 10

All rows from 1985 which do not include Madonna or Phil Collins in the group.
SELECT *
FROM tutorial.billboard_top_100_year_end
WHERE year = 1985
AND NOT "group" ILIKE '%madonna%'
AND NOT "group" ILIKE '%phil collins%'

All number 1 songs in the data set.
SELECT *
FROM tutorial.billboard_top_100_year_end
WHERE year_rank = 1

All rows where the artist is not listed
SELECT *
FROM tutorial.billboard_top_100_year_end
WHERE artist IS NULL

All of Madonna's top 100 hits ordered by their ranking (1 to 100)
SELECT *
FROM tutorial.billboard_top_100_year_end
WHERE "group" ILIKE '%madonna%'
ORDER BY year_rank

All of Madonna's top 100 hits ordered by their ranking within each year
SELECT *
FROM tutorial.billboard_top_100_year_end
WHERE "group" ILIKE '%madonna%'
ORDER BY year, year_rank

Every number 1 song since 1990 followed by every number 2 song since 1990 and number 3 song since 1990. (Hint: Multiple ordering)
SELECT *
FROM tutorial.billboard_top_100_year_end
WHERE year >= 1990
AND year_rank <= 3
ORDER BY year_rank, year



What is the highest position ever reached by Phil Collins?

SELECT
  MIN(year_rank) AS min_phil
FROM tutorial.billboard_top_100_year_end
WHERE artist = 'Phil Collins'


What is the average position reached by Michael Jackson?

SELECT
  AVG(year_rank) AS avg_mike
FROM tutorial.billboard_top_100_year_end
WHERE artist = 'Michael Jackson'

Madonna's average position when she actually reached the top 10

SELECT
  AVG(year_rank) AS avg_madonna
FROM tutorial.billboard_top_100_year_end
WHERE artist = 'Madonna' AND year_rank <= 10

List the top 10 artists based on their number of appearances on this list (and what that number is) since 1985

SELECT artist,
      COUNT(*) as count
FROM tutorial.billboard_top_100_year_end
WHERE year >= 1985
GROUP BY artist
ORDER BY count DESC
LIMIT 10

The total count of top 10 hits written by either Elvis, Madonna, the Beatles, or Elton John

SELECT COUNT(*) as sum
FROM tutorial.billboard_top_100_year_end
WHERE artist IN ('Elton John', 'Beattles', 'Maddona', 'Elvis Presley') AND year_rank <= 10

aapl_historical_stock_price

The count of days when Apple traded in a range that was larger than $5

SELECT COUNT(*)
FROM tutorial.aapl_historical_stock_price
WHERE high - low > 5

The highest daily trading range that Apple stock achieved in 2012

SELECT high - low AS range
FROM tutorial.aapl_historical_stock_price
WHERE year = 2012 AND low IS NOT NULL AND high IS NOT NULL
ORDER BY range DESC
LIMIT 1

The average price for all days when Apple's trading volume exceeded 10,000,000 shares.
SELECT ((SUM(high) + SUM(low)) / 2) / COUNT(*) AS total_sum
FROM tutorial.aapl_historical_stock_price
WHERE volume > 10000000



The number of trading days in each month of the year 2012
SELECT month, COUNT(*)
FROM tutorial.aapl_historical_stock_price
WHERE year = 2012
GROUP BY month
ORDER BY month



The maximum price Apple traded at during each year of the data set
SELECT year, MAX(high)
FROM tutorial.aapl_historical_stock_price
GROUP BY year
ORDER BY year



The average price and trading volume on each calendar month across the full data set (this should return only 12 rows, one for each month!)
SELECT month, AVG((high + low) / 2) AS average_price,
AVG(volume) AS average_volume
FROM tutorial.aapl_historical_stock_price
GROUP BY month
ORDER BY month




The average price for each month and year of data since 2008, ordered by years descending and months ascending.
SELECT year, month, AVG((high + low) / 2) AS average_price
FROM tutorial.aapl_historical_stock_price
WHERE year >= 2008
GROUP BY month, year
ORDER BY year DESC, month


The average price of days with a trading volume above 25,000,000 shares (just 1 row)

SELECT AVG((high + low) / 2) as avg
FROM tutorial.aapl_historical_stock_price
WHERE volume > 25000000


The average price on all months with an average daily trading volume above 10,000,000 shares.
SELECT month, AVG((high + low) / 2) AS average_price
FROM tutorial.aapl_historical_stock_price
WHERE volume > 10000000
GROUP BY month
ORDER BY month


The lowest and highest prices that Apple stock achieved between 2005 and 2010 (inclusive).
The average daily trading range in months where the stock moved more than $25 (open of month to close of month)
SELECT month, year, MIN(CAST(date AS DATE)) AS first_day,
             MAX(CAST(date AS DATE)) AS last_day
FROM tutorial.aapl_historical_stock_price
GROUP BY year, month


All months in the second half of the year where average daily trading volume was below 10,000,000.
SELECT month, AVG((high + low) / 2) AS average_price
FROM tutorial.aapl_historical_stock_price
WHERE volume < 10000000
GROUP BY month
ORDER BY month

A list of all calendar months by average daily trading volume (so only 12 rows), sorted from highest to lowest.
SELECT month, AVG((high + low) / 2) AS average_price
FROM tutorial.aapl_historical_stock_price
GROUP BY month
ORDER BY average_price DESC


Count how many unique months there are in the data set (should equal 12)
SELECT COUNT(DISTINCT month)
FROM tutorial.aapl_historical_stock_price



Count how many unique years there are in the data set
SELECT COUNT(DISTINCT month)
FROM tutorial.aapl_historical_stock_price

Count how many unique prices there are in the data set
SELECT COUNT(DISTINCT open) + COUNT(DISTINCT close) +
       COUNT(DISTINCT low) + COUNT(DISTINCT high) AS total_count
FROM tutorial.aapl_historical_stock_price

Return the percentage of unique "open" prices compared to all open prices in the data set
SELECT CAST(COUNT(DISTINCT open) AS FLOAT) / CAST(COUNT(open) AS FLOAT) as ratio
FROM tutorial.aapl_historical_stock_price



A listing of all months by their average daily trading volume and a classification that puts this volume into the following categories: "Low" = below 10MM, "Medium" = 10-25 MM, "High" = above 25MM
SELECT year,
       month,
       AVG(volume),
       CASE
       WHEN volume > 25000000 THEN 'high'
       WHEN volume <= 25000000 AND volume >= 10000000 THEN 'medium'
       ELSE 'low' END AS volume_category
FROM tutorial.aapl_historical_stock_price
GROUP BY year, month, volume
ORDER BY year, month



A listing of average monthly price plus which quarter of the year they are in (e.g. "Q2" or "Q4").
SELECT year, month,
       AVG((high + low) / 2) AS average_price,
       CASE
       WHEN month >= 10 THEN 4
       WHEN month >= 7 THEN 3
       WHEN month >= 4 THEN 2
       ELSE 1 END AS quarter
FROM tutorial.aapl_historical_stock_price
GROUP BY year, month, volume
ORDER BY year, month

This same listing filtered for only Q4 (use the new column not the months explicitly as part of this filtering).
SELECT sub.*
FROM (SELECT year, month,
       AVG((high + low) / 2) AS average_price,
       CASE
       WHEN month >= 10 THEN 4
       WHEN month >= 7 THEN 3
       WHEN month >= 4 THEN 2
       ELSE 1 END AS quarter
       FROM tutorial.aapl_historical_stock_price
       GROUP BY year, month, volume
       ORDER BY year, month) sub
WHERE quarter = 4

benn.college_football_players and benn.college_football_teams

Note: To see the schemas for these tables listed on the left panel, you need to search for "benn" where it says "Search Mode Public Tables"... they are not listed under "Tutorial" automatically like the previous tables were.

Note2: Mode uses a non-primary key "school_name" to join their tables here. You should really use primary keys wherever possible in your own data.

The most common home town of football players

SELECT hometown, COUNT(*)

FROM benn.college_football_players

WHERE hometown != '--'

GROUP BY "hometown"
ORDER BY "count" DESC

LIMIT 1


The total number of players in each of their Freshmen, Sophomore, Junior or Senior years (4 rows)

SELECT year, COUNT(*)

FROM benn.college_football_players

GROUP BY year


The total number of players in each position

SELECT position, COUNT(*)

FROM benn.college_football_players

GROUP BY position


The average height of quarterbacks

SELECT AVG(height)

FROM benn.college_football_players
WHERE position = 'QB'


The average height of each position

SELECT position, AVG(height)

FROM benn.college_football_players

GROUP BY position



Return 100 football players and which conference they play for

SELECT teams.conference as conference,
      players.player_name as playername

FROM benn.college_football_players players
JOIN benn.college_football_teams teams
ON teams.school_name = players.school_name

LIMIT 100


The heaviest football player in the SEC

SELECT teams.conference as conference,
      players.player_name as playername,
      players.weight as highest_weight

FROM benn.college_football_players players
JOIN benn.college_football_teams teams
ON teams.school_name = players.school_name

WHERE conference = 'SEC'

GROUP BY highest_weight, conference, player_name

ORDER BY highest_weight DESC

The top 5 heaviest football players in each conference


The most common home state of players by conference


The average height of football players in each conference


The count of football players in the top 100 of weight who belong to each division


All players whose home state is Kansas but who went to a school in Missouri
